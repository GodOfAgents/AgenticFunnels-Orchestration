# Database
# For production, set this to your managed PostgreSQL URL
DATABASE_URL=postgresql://user:password@localhost:5432/opensaas

# Redis (Optional - for caching and WebSocket scaling)
# For production, use managed Redis service or remove if not needed
REDIS_URL=redis://localhost:6379

# Milvus (Optional - for RAG vector search)
# For production, use managed Milvus service or alternative vector DB
MILVUS_HOST=localhost
MILVUS_PORT=19530

# OpenAI (Emergent LLM Key)
OPENAI_API_KEY=sk-emergent-aDf9b1aE7744d59190

# Service Configuration
PORT=8001
HOST=0.0.0.0
ENVIRONMENT=development

# Security (REQUIRED - Generate secure keys for production!)
# Generate SECRET_KEY: python -c "import secrets; print(secrets.token_urlsafe(32))"
# Generate ENCRYPTION_KEY: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
SECRET_KEY=
ENCRYPTION_KEY=

# CORS - Comma-separated list of allowed origins
# For production, add your frontend domain(s)
# Example: ALLOWED_ORIGINS=https://yourapp.com,https://www.yourapp.com
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# WebSocket
WS_MAX_CONNECTIONS=1000

# Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090